{"ast":null,"code":"var _jsxFileName = \"/Users/jackgreff/databases-final/client/src/pages/ActiveUsers.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActiveUsers = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [review, setReview] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:3000/active_users') // Make sure the URL matches your server configuration\n    .then(res => res.json()).then(resJson => {\n      setReview(resJson);\n      setLoading(false);\n    }, error => {\n      setError(error);\n      setLoading(false);\n    });\n  }, []);\n  console.log(\"useEffect is running\");\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading active users...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error loading active users: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  if (!users.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No active users found!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Active Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.name, \" - Reviews: \", user.review_count]\n      }, user.user_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(ActiveUsers, \"pTl9dLaY0F8R38xJHhW2CSVcV7c=\");\n_c = ActiveUsers;\nexport default ActiveUsers;\nvar _c;\n$RefreshReg$(_c, \"ActiveUsers\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ActiveUsers","_s","users","setUsers","loading","setLoading","error","setError","review","setReview","fetch","then","res","json","resJson","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","user","name","review_count","user_id","_c","$RefreshReg$"],"sources":["/Users/jackgreff/databases-final/client/src/pages/ActiveUsers.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst ActiveUsers = () => {\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n    const [review, setReview] = useState(null);\n\n\n\n    useEffect(() => {\n        fetch('http://localhost:3000/active_users') // Make sure the URL matches your server configuration\n        .then(res => res.json())\n        .then(\n            resJson => {\n                setReview(resJson);\n                setLoading(false);\n            },\n            error => {\n                setError(error);\n                setLoading(false);\n            }\n        );\n        }, []);\n        console.log(\"useEffect is running\");\n\n    if (loading) return <div>Loading active users...</div>;\n    if (error) return <div>Error loading active users: {error}</div>;\n    if (!users.length) return <div>No active users found!</div>;\n\n    return (\n        <div>\n            <h2>Active Users</h2>\n            <ul>\n                {users.map(user => (\n                    <li key={user.user_id}>\n                        {user.name} - Reviews: {user.review_count}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default ActiveUsers;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAI1CD,SAAS,CAAC,MAAM;IACZc,KAAK,CAAC,oCAAoC,CAAC,CAAC;IAAA,CAC3CC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CACDG,OAAO,IAAI;MACPL,SAAS,CAACK,OAAO,CAAC;MAClBT,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,EACDC,KAAK,IAAI;MACLC,QAAQ,CAACD,KAAK,CAAC;MACfD,UAAU,CAAC,KAAK,CAAC;IACrB,CACJ,CAAC;EACD,CAAC,EAAE,EAAE,CAAC;EACNU,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EAEvC,IAAIZ,OAAO,EAAE,oBAAOL,OAAA;IAAAkB,QAAA,EAAK;EAAuB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACtD,IAAIf,KAAK,EAAE,oBAAOP,OAAA;IAAAkB,QAAA,GAAK,8BAA4B,EAACX,KAAK;EAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAChE,IAAI,CAACnB,KAAK,CAACoB,MAAM,EAAE,oBAAOvB,OAAA;IAAAkB,QAAA,EAAK;EAAsB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE3D,oBACItB,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBtB,OAAA;MAAAkB,QAAA,EACKf,KAAK,CAACqB,GAAG,CAACC,IAAI,iBACXzB,OAAA;QAAAkB,QAAA,GACKO,IAAI,CAACC,IAAI,EAAC,cAAY,EAACD,IAAI,CAACE,YAAY;MAAA,GADpCF,IAAI,CAACG,OAAO;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEjB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACpB,EAAA,CAxCID,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AA0CjB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}