{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { Typography, Card, CardContent } from '@mui/material';\n// const config = require('../config.json');\n\n// const ActiveUsers = () => {\n//     const [users, setUsers] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n\n//     useEffect(() => {\n//         fetch(`http://${config.server_host}:${config.server_port}/active_users`)// Use your actual server host and port\n\n//             .then(res => res.json())\n//             .then(data => {\n//                 setUsers(data);\n//                 setLoading(false);\n//             })\n//             .catch(err => {\n//                 console.error('Failed to fetch active users:', err);\n//                 setError(err);\n//                 setLoading(false);\n//             });\n//     }, []);\n\n//     if (loading) return <Typography>Loading active users...</Typography>;\n//     if (error) return <Typography>Error loding active users!</Typography>;\n//     if (!users.length) return <Typography>No active users found!</Typography>;\n\n//     return (\n//         <div>\n//             <Typography variant=\"h4\" gutterBottom>\n//                 Active Users\n//             </Typography>\n//             {users.map(user => (\n//                 <Card key={user.user_id} style={{ marginBottom: 8 }}>\n//                     <CardContent>\n//                         <Typography variant=\"h5\">{user.name}</Typography>\n//                         <Typography color=\"textSecondary\">\n//                             Reviews Count: {user.review_count}\n//                         </Typography>\n//                     </CardContent>\n//                 </Card>\n//             ))}\n//         </div>\n//     );\n// };\n\n// export default ActiveUsers;","map":{"version":3,"names":[],"sources":["/Users/jackgreff/databases-final/client/src/pages/ActiveUsers.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { Typography, Card, CardContent } from '@mui/material';\n// const config = require('../config.json');\n\n\n// const ActiveUsers = () => {\n//     const [users, setUsers] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n\n\n//     useEffect(() => {\n//         fetch(`http://${config.server_host}:${config.server_port}/active_users`)// Use your actual server host and port\n\n//             .then(res => res.json())\n//             .then(data => {\n//                 setUsers(data);\n//                 setLoading(false);\n//             })\n//             .catch(err => {\n//                 console.error('Failed to fetch active users:', err);\n//                 setError(err);\n//                 setLoading(false);\n//             });\n//     }, []);\n\n//     if (loading) return <Typography>Loading active users...</Typography>;\n//     if (error) return <Typography>Error loding active users!</Typography>;\n//     if (!users.length) return <Typography>No active users found!</Typography>;\n\n//     return (\n//         <div>\n//             <Typography variant=\"h4\" gutterBottom>\n//                 Active Users\n//             </Typography>\n//             {users.map(user => (\n//                 <Card key={user.user_id} style={{ marginBottom: 8 }}>\n//                     <CardContent>\n//                         <Typography variant=\"h5\">{user.name}</Typography>\n//                         <Typography color=\"textSecondary\">\n//                             Reviews Count: {user.review_count}\n//                         </Typography>\n//                     </CardContent>\n//                 </Card>\n//             ))}\n//         </div>\n//     );\n// };\n\n// export default ActiveUsers;\n"],"mappings":"AAAA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}