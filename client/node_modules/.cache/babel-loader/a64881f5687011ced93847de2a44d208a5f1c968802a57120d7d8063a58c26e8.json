{"ast":null,"code":"var _jsxFileName = \"/Users/jackgreff/databases-final/client/src/pages/ActiveUsers.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Typography, Card, CardContent } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = require('../config.json');\nconst ActiveUsers = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(`http://${confhig.server_host}:${config.server_port}/active_users`) // Use your actual server host and port\n    .then(res => res.json()).then(data => {\n      setUsers(data);\n      setLoading(false);\n    }).catch(err => {\n      console.error('Failed to fetch active users:', err);\n      setError(err);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Typography, {\n    children: \"Loading active users...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Typography, {\n    children: \"Error loading active users!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  if (!users.length) return /*#__PURE__*/_jsxDEV(Typography, {\n    children: \"No active users found!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Active Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), users.map(user => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        marginBottom: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          children: [\"Reviews Count: \", user.review_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)\n    }, user.user_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(ActiveUsers, \"vvG5G9m+JVa2SSWAm277lQVAKio=\");\n_c = ActiveUsers;\nexport default ActiveUsers;\nvar _c;\n$RefreshReg$(_c, \"ActiveUsers\");","map":{"version":3,"names":["React","useEffect","useState","Typography","Card","CardContent","jsxDEV","_jsxDEV","config","require","ActiveUsers","_s","users","setUsers","loading","setLoading","error","setError","fetch","confhig","server_host","server_port","then","res","json","data","catch","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","variant","gutterBottom","map","user","style","marginBottom","name","color","review_count","user_id","_c","$RefreshReg$"],"sources":["/Users/jackgreff/databases-final/client/src/pages/ActiveUsers.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Typography, Card, CardContent } from '@mui/material';\nconst config = require('../config.json');\n\n\nconst ActiveUsers = () => {\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        fetch(`http://${confhig.server_host}:${config.server_port}/active_users`)// Use your actual server host and port\n            .then(res => res.json())\n            .then(data => {\n                setUsers(data);\n                setLoading(false);\n            })\n            .catch(err => {\n                console.error('Failed to fetch active users:', err);\n                setError(err);\n                setLoading(false);\n            });\n    }, []);\n\n    if (loading) return <Typography>Loading active users...</Typography>;\n    if (error) return <Typography>Error loading active users!</Typography>;\n    if (!users.length) return <Typography>No active users found!</Typography>;\n\n    return (\n        <div>\n            <Typography variant=\"h4\" gutterBottom>\n                Active Users\n            </Typography>\n            {users.map(user => (\n                <Card key={user.user_id} style={{ marginBottom: 8 }}>\n                    <CardContent>\n                        <Typography variant=\"h5\">{user.name}</Typography>\n                        <Typography color=\"textSecondary\">\n                            Reviews Count: {user.review_count}\n                        </Typography>\n                    </CardContent>\n                </Card>\n            ))}\n        </div>\n    );\n};\n\nexport default ActiveUsers;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}